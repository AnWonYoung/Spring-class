<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


<!-- mvc패턴을 사용하고 싶을 때 (=@Controller) -->
    <mvc:annotation-driven/>
    <!--    애노테이션을 사용하려고 할 때-->
    <context:annotation-config/>
    <!-- 컴포넌트 스캔 "package명 적어주기"-->
    <!-- bean등록할 클래스를 스캔뜨는 시작 패키지를 설정하는 것
         아래의 패키지 명으로 모두 들어오게 됨 -->
    <context:component-scan base-package="com.koreait.spring"/>

    <!--  res안에 css, js를 받아오려면 res폴더 주소값을 따로 설정해주기 (아니면 디폴트인 controller주소값만 받음) -->
    <!--  모든 요청은 여기 dispatcher에서 먼저 잡기 때문 -->
    <!--  코드 뜻 : mapping 주소를 부른다면 location으로 연결  -->
    <mvc:resources mapping="/res/**" location="/res/"/>
    <mvc:resources mapping="/img/**" location="file:///D:/springImg/"/>

    <!-- jsp 파일을 사용할 때 반드시 필요한 것-->
    <!-- 사용할 파일명을 완성시켜주는 객체 (Controller의 주소값이 넘어와서 아래 value값을 붙이고 넘김 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"/>
        <!--tiles추가로 첫 번쩨로 jsp 파일이 열리는 게 아니라 tiles가 될 수 있도록 단계를 내림-->
    </bean>

    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <property name="order" value="1"></property>
    </bean>

    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

    <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
    </bean>
</beans>